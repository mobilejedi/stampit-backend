package com.stampit.model;

// Generated 1-ago-2014 11.47.35 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.JoinColumn;

import org.springframework.data.rest.core.annotation.RestResource;

/**
 * Customers generated by hbm2java
 */
@Entity
@Table(name = "CUSTOMERS", catalog = "STAMPIT")
public class Customer implements java.io.Serializable {

	private Long idCustomer;
	private String username;
	private String password;
	private String firstName;
	private String lastName;
	private String email;
	private String phone;	
	private Set<CustomerFeedback> customerFeedbacks = new HashSet<CustomerFeedback>();
	private Set<ActiveCard> activeCards = new HashSet<ActiveCard>();
	private CustomerConfirmation customerConfirmation;
		
	public Customer() {
	}

	@Id		
	@GeneratedValue(strategy = IDENTITY)
//	@SequenceGenerator(name="CUSTOMERS_ID_CUSTOMER_seq",
//		sequenceName="CUSTOMERS_ID_CUSTOMER_seq",
//		allocationSize=1)
//	@GeneratedValue(strategy = GenerationType.SEQUENCE,
//		generator="CUSTOMERS_ID_CUSTOMER_seq")		
	@Column(name = "ID_CUSTOMER", unique = true, nullable = false)
	public Long getIdCustomer() {
		return this.idCustomer;
	}

	public void setIdCustomer(Long idCustomer) {
		this.idCustomer = idCustomer;
	}

	@Column(name = "USERNAME", nullable = false, length = 16)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "PASSWORD", nullable = false, length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "FIRST_NAME", nullable = false, length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LAST_NAME", nullable = false, length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "EMAIL", nullable = false, length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "PHONE", length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")	
	@RestResource(path = "feedbacks")
	public Set<CustomerFeedback> getcustomerFeedbacks() {
		return this.customerFeedbacks;
	}	

	public void setcustomerFeedbacks(Set<CustomerFeedback> customerFeedbacks) {
		this.customerFeedbacks = customerFeedbacks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	@RestResource(path = "activeCards")
	public Set<ActiveCard> getactiveCards() {
		return this.activeCards;
	}	

	public void setactiveCards(Set<ActiveCard> activeCards) {
		this.activeCards = activeCards;
	}	
	
	@Override
	public String toString() {
		return "Customer [idCustomer=" + idCustomer + ", username=" + username
				+ ", password=" + password + ", firstName=" + firstName
				+ ", lastName=" + lastName + ", email=" + email + ", phone="
				+ phone + ", customerFeedbacks=" + customerFeedbacks
				+ ", activeCards=" + activeCards + "]";
	}
	
	@OneToOne(cascade=CascadeType.ALL,fetch=FetchType.LAZY)
    @JoinColumn(name="ID_CUSTOMER",insertable=false,updatable=false)
	public CustomerConfirmation getCustomerConfirmation() {
		return customerConfirmation;
	}

	public void setCustomerConfirmation(CustomerConfirmation customerConfirmation) {
		this.customerConfirmation = customerConfirmation;
	}	

}
